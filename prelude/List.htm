<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>LIST</title>
    <link rel="stylesheet" href="../5HT.css" />
</head>
<body>
<div class=menu>
<a href="../types.htm">groupoid.co</a><font color=silver>/prelude/List</font>
</div>
<hr>
<div class=app>

<div class=block style="width:150px;height:350px;">
&nbsp;
</div>

<div class=block style="width:700px;height:0px;">

<h1>List</h1>

List package consists of three modules: <span class=sel>List</span> inductive data type definition and its constructors;
<span class=sel>Lists</span> natural transformations or generic functions; and <span class=sel>List.Theory</span> theorems.

<pre style="width:500px;background:white;">

      data List: (A:*) → * :=
           (Nil: () → List A)
           (Cons: A → List A → List A)

</pre>

<h2><a name="list">Nil</a></h2>

<span class=sel>Nil</span> construction is terminal element of List data type.

<pre style="width:500px;background:white;">

    > Nil
    : []

</pre>

<h2><a name="nat">Cons</a></h2>

<span class=sel>Cons</span> is basic list constructor.

<pre style="width:500px;background:white;">

    > Cons 69 (Cons 88 (Cons 69 []))
    "EXE"

</pre>

<h1>Generics</h1>

These are exactly generic functions from CL, or generics from Java,
or natural transformations from Category Theory. It is basically a library of functions
that manipulate List data type instances.

<pre style="width:500px;background:white;">

    record Lists: (A: *) → * :=
           ([++]: List A → List A)
           (head: List A → option A)
           (tail: List A → option A)
           (null: List A → bool)
           (all)
           (any)
           (concat)
           (empty)
           (filter)
           (flip)
           (length)
           (map)
           (pure)
           (replicate)
           (reverse)

</pre>

<h2><a name="empty">[++]</a></h2>

<span class=sel>[++]</span> is a list concatenation.

<pre style="width:500px;background:white;">

    > Lists.[++] [] []
    : []

</pre>

<h2><a name="bool">head</a></h2>

<span class=sel>head</span> extracts the first element of a list. In casse of List empiness returns Nothing otherwise Just a list element.

<pre style="width:500px;background:white;">

    > Lists.head []
    : Nothing

</pre>

<h2><a name="vector">tail</a></h2>


<h1>Resources</h1>

<p>01 &nbsp;<a href="https://gitter.im/groupoid/exe/archives/">EXE ARCHIVES</a></p>
<p>02 &nbsp;<a href="https://github.com/groupoid/exe">GIT SOURCES</a></p>

<center style="margin-top: 120px;margin-bottom:60px;"><img style="margin-bottom:-20px;" src="../Stamp.svg" width=50>2016 &copy; Groupoid Infinity, Inc.</center>
<br>
<br>
<br>
<br>

</div>

</div>
</body>
</html>
