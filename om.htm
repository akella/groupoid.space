<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>OM</title>
    <link rel="stylesheet" href="5HT.css" />
</head>
<body>
<div class=menu>
<a href="index.html">groupoid.co</a><font color=silver>/om</font>
</div>
<hr>
<div class=app>

<div class=block style="width:230px;height:550px;">
        <img src="Om.svg" height=200>
</div>

<div class=block style="width:700px;">
<center><h1>Om Assembler</h1>
        <h5>CoC Intermediate Language<br> for typechecking and normalization</h5></center>

<h1>Definition</h1>

<center><h2><a name="nat">Calculus of Constructions</a></h2></center>

The <span class=sel>Om</span> language is defined as CoC pure type system language with predicative universes.
There is no fixpoint axiom needed for the definition of infinity term dependance.

<center><h2><a name="axioms">Axioms</a></h2></center>

<p>All terms respect ranking inside universums hierarchy and
complexity of the dependent term is equal maximum complexity of term and its dependency.</p>

<pre style="width:340px;">

  ⊦ *[i] : *[i+1]
  ⊦ *[i] ↝ *[j] : *[max i j]

</pre>

<center><h2><a name="syntax">Syntax</a></h2></center>

The untyped lambda language for performance on virual machines.

<pre  style="width:550px;">

        T := ( T ) | T T | λ ( L : * ) → T

</pre>

<p>The core language of CoC is consists of: indexed stars, variables, applications, lambdas and pi AST constructions. </p>

<pre  style="width:550px;">

    O := * | ( O ) | O O | λ ( L : O ) → O
                         | ∀ ( L : O ) → O

</pre>

<center><h2><a name="ast">AST</a></h2></center>

<pre  style="width:500px;">

  data om: * :=
       (star: nat → om)
       (var: name → om)
       (app: om → om → om)
       (lambda: name → om → om → om)
       (pi: name → om → om → om)

</pre>

<h1>Passes</h1>

<center><h2><a name="normal">Normalized</a></h2></center>

Terms in CoC language.

<pre  style="width:500px;">

   λ (A: *)
 → λ (Head: A)
 → λ (Tail:
     ∀ (List: *)
   → ∀ (Cons:
       ∀ (Head: A)
     → ∀ (Tail: List)
     → List)
   → ∀ (Nil: List)
   → List)
 → λ (List: *)
 → λ (Cons:
     ∀ (Head: A)
   → ∀ (Tail: List)
   → List)
 → λ (Nil: List)
 → Cons Head (Tail List Cons Nil)

</pre>

<center><h2><a name="erased">Erased</a></h2></center>

Terms in untyped lambda pure language.

<pre  style="width:500px;">

   λ (Head: *)
 → λ (Tail: *)
 → λ (Cons: *)
 → λ (Nil: *)
 → Cons Head (Tail Cons Nil)

</pre>

<center><h2><a name="extract">Extract</a></h2></center>

Erlang extracted code.

<pre  style="width:800px;">

  cons() -> fun (Head) -> fun (Tail) -> fun (Cons) -> fun (Nil) ->
            ((Cons(Head))((Tail(Cons))(Nil))) end end end end.

</pre>

<h1>Resources</h1>

<p>01 &nbsp;<a href="https://gitter.im/groupoid/om/archives/">OM ARCHIVES</a></p>
<p>02 &nbsp;<a href="https://github.com/groupoid/om">GIT SOURCES</a></p>


<br>

<center style="margin-top: 120px;margin-bottom:60px;"><img style="margin-bottom:-20px;" src="Stamp.svg" width=50>2016 &copy; Groupoid Infinity, Inc.</center>

</div>

</body>
</html>
